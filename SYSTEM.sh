#!/bin/bash

# =============================================================================
# Ubuntu Master Configuration & Management Script
# –ú–∞—Å—Ç–µ—Ä-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Ubuntu
# Version: 2.0
# =============================================================================

set -euo pipefail

readonly SCRIPT_VERSION="2.0"
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly CONFIG_DIR="$HOME/.ubuntu-master"
readonly BACKUP_DIR="$CONFIG_DIR/backups/$(date +%Y%m%d-%H%M%S)"
readonly LOG_FILE="$CONFIG_DIR/logs/ubuntu-master.log"
readonly THEMES_DIR="$CONFIG_DIR/themes"
readonly SCRIPTS_DIR="$CONFIG_DIR/scripts"

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly PURPLE='\033[0;35m'
readonly CYAN='\033[0;36m'
readonly WHITE='\033[1;37m'
readonly GRAY='\033[0;90m'
readonly BOLD='\033[1m'
readonly NC='\033[0m'

# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
readonly EMOJI_ROCKET="üöÄ"
readonly EMOJI_GEAR="‚öôÔ∏è"
readonly EMOJI_STAR="‚≠ê"
readonly EMOJI_FIRE="üî•"
readonly EMOJI_DIAMOND="üíé"
readonly EMOJI_MAGIC="‚ú®"
readonly EMOJI_CROWN="üëë"
readonly EMOJI_LIGHTNING="‚ö°"

# =============================================================================
# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
# =============================================================================

setup_environment() {
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p "$CONFIG_DIR"/{logs,backups,themes,scripts,configs}
    mkdir -p "$BACKUP_DIR"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    exec 19>&2
    exec 2> >(tee -a "$LOG_FILE")
    
    echo "$(date '+%Y-%m-%d %H:%M:%S') - Ubuntu Master Script v$SCRIPT_VERSION started" >> "$LOG_FILE"
}

log() {
    echo -e "[$(date '+%H:%M:%S')] $*" | tee -a "$LOG_FILE"
}

print_header() {
    clear
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë${WHITE}                    ${EMOJI_CROWN} UBUNTU MASTER CONFIGURATION ${EMOJI_CROWN}                    ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïë${WHITE}                          –ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π                          ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïë${WHITE}                                Version $SCRIPT_VERSION                                 ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

print_section() {
    local title="$1"
    local emoji="$2"
    echo ""
    echo -e "${CYAN}${BOLD}$emoji ‚ïê‚ïê‚ïê $title ‚ïê‚ïê‚ïê${NC}"
    echo ""
}

success() {
    echo -e "${GREEN}‚úÖ $*${NC}"
    log "SUCCESS: $*"
}

error() {
    echo -e "${RED}‚ùå $*${NC}"
    log "ERROR: $*"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $*${NC}"
    log "WARNING: $*"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $*${NC}"
    log "INFO: $*"
}

prompt() {
    echo -e "${YELLOW}‚ùì $1${NC}"
    read -p "$(echo -e "${WHITE}‚û§ ${NC}")" response
    echo "$response"
}

yes_no() {
    local question="$1"
    local default="${2:-n}"
    
    while true; do
        if [[ "$default" == "y" ]]; then
            read -p "$(echo -e "${YELLOW}‚ùì $question [Y/n]: ${NC}")" response
            response=${response:-y}
        else
            read -p "$(echo -e "${YELLOW}‚ùì $question [y/N]: ${NC}")" response
            response=${response:-n}
        fi
        
        case "${response,,}" in
            y|yes|–¥–∞|–¥) return 0 ;;
            n|no|–Ω–µ—Ç|–Ω) return 1 ;;
            *) echo -e "${RED}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ y –∏–ª–∏ n${NC}" ;;
        esac
    done
}

show_progress() {
    local current=$1
    local total=$2
    local task="$3"
    local percent=$((current * 100 / total))
    local filled=$((percent / 2))
    local empty=$((50 - filled))
    
    printf "\r${BLUE}[${GREEN}"
    printf "%*s" $filled | tr ' ' '‚ñà'
    printf "${GRAY}"
    printf "%*s" $empty | tr ' ' '‚ñë'
    printf "${BLUE}] ${WHITE}%d%% ${CYAN}%s${NC}" $percent "$task"
    
    if [[ $current -eq $total ]]; then
        echo ""
    fi
}

# =============================================================================
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# =============================================================================

show_main_menu() {
    print_header
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫:${NC}"
    echo ""
    echo -e "${CYAN} 1)${NC} ${EMOJI_MAGIC} –ö—Ä–∞—Å–∏–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo -e "${CYAN} 2)${NC} ${EMOJI_GEAR} –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
    echo -e "${CYAN} 3)${NC} ${EMOJI_FIRE} –†–∞–∑—Ä–∞–±–æ—Ç—á–µ—Å–∫–∞—è —Å—Ä–µ–¥–∞"
    echo -e "${CYAN} 4)${NC} ${EMOJI_DIAMOND} –ú—É–ª—å—Ç–∏–º–µ–¥–∏–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∞"
    echo -e "${CYAN} 5)${NC} ${EMOJI_LIGHTNING} –°–µ—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
    echo -e "${CYAN} 6)${NC} ${EMOJI_STAR} –ü–æ–ª–µ–∑–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
    echo -e "${CYAN} 7)${NC} ${EMOJI_ROCKET} –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —Å–∫—Ä–∏–ø—Ç—ã"
    echo -e "${CYAN} 8)${NC} ${EMOJI_CROWN} –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
    echo -e "${CYAN} 9)${NC} ${GRAY} –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo -e "${CYAN}10)${NC} ${RED} –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo ""
    echo -e "${GRAY} 0)${NC} –í—ã—Ö–æ–¥"
    echo ""
    
    local choice
    choice=$(prompt "–í–∞—à –≤—ã–±–æ—Ä")
    
    case "$choice" in
        1) terminal_beautification_menu ;;
        2) system_optimization_menu ;;
        3) development_environment_menu ;;
        4) multimedia_graphics_menu ;;
        5) network_security_menu ;;
        6) utilities_tools_menu ;;
        7) automation_scripts_menu ;;
        8) games_entertainment_menu ;;
        9) backup_recovery_menu ;;
        10) diagnostics_monitoring_menu ;;
        0) exit_script ;;
        *) 
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            sleep 2
            show_main_menu
            ;;
    esac
}

# =============================================================================
# 1. –ö—Ä–∞—Å–∏–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
# =============================================================================

terminal_beautification_menu() {
    print_section "–ö–†–ê–°–ò–í–´–ô –¢–ï–†–ú–ò–ù–ê–õ –ò –ò–ù–¢–ï–†–§–ï–ô–°" "$EMOJI_MAGIC"
    
    echo -e "${WHITE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞:${NC}"
    echo ""
    echo -e "${CYAN} 1)${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Oh My Zsh"
    echo -e "${CYAN} 2)${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PowerLevel10k theme"
    echo -e "${CYAN} 3)${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å—Ö–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    echo -e "${CYAN} 4)${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Fonts"
    echo -e "${CYAN} 5)${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ tmux —Å –∫—Ä–∞—Å–∏–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
    echo -e "${CYAN} 6)${NC} –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è GNOME/KDE"
    echo -e "${CYAN} 7)${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ conky (—Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä)"
    echo -e "${CYAN} 8)${NC} –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    echo -e "${CYAN} 9)${NC} –ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è (–≤—Å–µ —Å—Ä–∞–∑—É)"
    echo ""
    echo -e "${GRAY} 0)${NC} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    
    local choice
    choice=$(prompt "–í–∞—à –≤—ã–±–æ—Ä")
    
    case "$choice" in
        1) install_oh_my_zsh ;;
        2) install_powerlevel10k ;;
        3) setup_color_schemes ;;
        4) install_nerd_fonts ;;
        5) setup_beautiful_tmux ;;
        6) customize_desktop_environment ;;
        7) install_conky ;;
        8) setup_terminal_animations ;;
        9) full_terminal_customization ;;
        0) show_main_menu ;;
        *) 
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            sleep 2
            terminal_beautification_menu
            ;;
    esac
}

install_oh_my_zsh() {
    print_section "–£–°–¢–ê–ù–û–í–ö–ê OH MY ZSH" "üêö"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ zsh
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh..."
    sudo apt update && sudo apt install -y zsh curl git
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh
    if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
        info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh..."
        sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
    install_zsh_plugins
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .zshrc
    setup_zshrc_config
    
    # –°–º–µ–Ω–∞ –æ–±–æ–ª–æ—á–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if yes_no "–°–º–µ–Ω–∏—Ç—å –æ–±–æ–ª–æ—á–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ Zsh?"; then
        sudo chsh -s $(which zsh) $(whoami)
        success "Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –æ–±–æ–ª–æ—á–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
    
    success "Oh My Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    
    if yes_no "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π?"; then
        exec zsh
    fi
    
    terminal_beautification_menu
}

install_zsh_plugins() {
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ Zsh..."
    
    local plugins_dir="$HOME/.oh-my-zsh/custom/plugins"
    
    # zsh-autosuggestions
    if [[ ! -d "$plugins_dir/zsh-autosuggestions" ]]; then
        git clone https://github.com/zsh-users/zsh-autosuggestions "$plugins_dir/zsh-autosuggestions"
    fi
    
    # zsh-syntax-highlighting
    if [[ ! -d "$plugins_dir/zsh-syntax-highlighting" ]]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting "$plugins_dir/zsh-syntax-highlighting"
    fi
    
    # zsh-completions
    if [[ ! -d "$plugins_dir/zsh-completions" ]]; then
        git clone https://github.com/zsh-users/zsh-completions "$plugins_dir/zsh-completions"
    fi
    
    # autojump
    sudo apt install -y autojump
    
    # fzf
    if [[ ! -d "$HOME/.fzf" ]]; then
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        ~/.fzf/install --all
    fi
    
    success "–ü–ª–∞–≥–∏–Ω—ã Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

setup_zshrc_config() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ .zshrc..."
    
    # –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
    [[ -f "$HOME/.zshrc" ]] && cp "$HOME/.zshrc" "$BACKUP_DIR/zshrc.backup"
    
    cat > "$HOME/.zshrc" << 'EOF'
# Oh My Zsh Configuration
export ZSH="$HOME/.oh-my-zsh"

# –¢–µ–º–∞
ZSH_THEME="agnoster"

# –ü–ª–∞–≥–∏–Ω—ã
plugins=(
    git
    sudo
    docker
    docker-compose
    npm
    yarn
    pip
    python
    node
    autojump
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-completions
    colored-man-pages
    command-not-found
    extract
    web-search
    copyfile
    copydir
    history
    jsontools
)

source $ZSH/oh-my-zsh.sh

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
export EDITOR='vim'
export LANG=en_US.UTF-8

# –ê–ª–∏–∞—Å—ã
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ~='cd ~'
alias c='clear'
alias h='history'
alias j='jobs -l'
alias which='type -a'
alias grep='grep --color'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# Git –∞–ª–∏–∞—Å—ã
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git log --oneline'
alias gd='git diff'

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –∞–ª–∏–∞—Å—ã
alias df='df -h'
alias du='du -ch'
alias free='free -m'
alias ps='ps auxf'
alias top='htop'
alias ports='netstat -tuln'

# –§—É–Ω–∫—Ü–∏–∏
mkcd() { mkdir -p "$1" && cd "$1"; }
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# FZF integration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Autojump
[[ -s /usr/share/autojump/autojump.sh ]] && source /usr/share/autojump/autojump.sh

# Custom prompt
autoload -U promptinit; promptinit
prompt agnoster

# –ò—Å—Ç–æ—Ä–∏—è
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory
setopt sharehistory
setopt incappendhistory

# –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
autoload -U compinit
compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
EOF

    success ".zshrc –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

install_powerlevel10k() {
    print_section "–£–°–¢–ê–ù–û–í–ö–ê POWERLEVEL10K" "‚ö°"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PowerLevel10k
    if [[ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]]; then
        info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PowerLevel10k..."
        git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Font
    install_nerd_fonts
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –≤ .zshrc
    if [[ -f "$HOME/.zshrc" ]]; then
        sed -i 's/ZSH_THEME=".*"/ZSH_THEME="powerlevel10k\/powerlevel10k"/' "$HOME/.zshrc"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ p10k
    create_p10k_config
    
    success "PowerLevel10k —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'p10k configure' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã"
    
    terminal_beautification_menu
}

create_p10k_config() {
    cat > "$HOME/.p10k.zsh" << 'EOF'
# PowerLevel10k Configuration
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob
  unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'
  autoload -Uz is-at-least && is-at-least 5.1 || return

  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    os_icon                 # os identifier
    dir                     # current directory
    vcs                     # git status
    prompt_char             # prompt symbol
  )
  
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    status                  # exit code of the last command
    command_execution_time  # duration of the last command
    background_jobs         # presence of background jobs
    direnv                  # direnv status
    asdf                    # asdf version manager
    virtualenv              # python virtual environment
    anaconda                # conda environment
    pyenv                   # python environment
    goenv                   # go environment
    nodenv                  # node.js version
    nvm                     # node.js version
    nodeenv                 # node.js environment
    rbenv                   # ruby version
    rvm                     # ruby version manager
    fvm                     # flutter version management
    luaenv                  # lua version
    jenv                    # java version
    plenv                   # perl version
    phpenv                  # php version
    scalaenv                # scala version
    haskell_stack           # haskell tool stack
    kubecontext             # current kubernetes context
    terraform               # terraform workspace
    aws                     # aws profile
    aws_eb_env              # aws elastic beanstalk environment
    azure                   # azure account name
    gcloud                  # google cloud cli account and project
    google_app_cred         # google application credentials
    context                 # user@hostname
    nordvpn                 # nordvpn connection status
    ranger                  # ranger shell
    nnn                     # nnn shell
    vim_shell               # vim shell indicator
    midnight_commander      # midnight commander shell
    nix_shell               # nix shell
    vi_mode                 # vi mode
    todo                    # todo items
    timewarrior             # timewarrior tracking status
    taskwarrior             # taskwarrior task count
    time                    # current time
    newline                 # \n
  )

  typeset -g POWERLEVEL9K_MODE=nerdfont-complete
  typeset -g POWERLEVEL9K_ICON_PADDING=moderate
  typeset -g POWERLEVEL9K_BACKGROUND=
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE=
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=
  typeset -g POWERLEVEL9K_VISUAL_IDENTIFIER_EXPANSION=
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=' '
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_BACKGROUND=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_GAP_BACKGROUND=
  if [[ $POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR != ' ' ]]; then
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND=242
    typeset -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_FIRST_SEGMENT_END_SYMBOL='%{%}'
    typeset -g POWERLEVEL9K_EMPTY_LINE_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL='%{%}'
  fi
  
  # OS identifier color
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=7
  
  # Prompt character
  typeset -g POWERLEVEL9K_PROMPT_CHAR_BACKGROUND=
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=76
  typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=196
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIINS_CONTENT_EXPANSION='‚ùØ'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VICMD_CONTENT_EXPANSION='‚ùÆ'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIVIS_CONTENT_EXPANSION='V'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIOWR_CONTENT_EXPANSION='‚ñ∂'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OVERWRITE_STATE=true
  typeset -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=
  typeset -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=
  
  # Directory
  typeset -g POWERLEVEL9K_DIR_BACKGROUND=4
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=254
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=250
  typeset -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=255
  typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true
  local anchor_files=(
    .bzr
    .citc
    .git
    .hg
    .node-version
    .python-version
    .go-version
    .ruby-version
    .lua-version
    .java-version
    .perl-version
    .php-version
    .tool-versions
    .shims
    .svn
    .terraform
    CVS
    Cargo.toml
    composer.json
    go.mod
    package.json
    stack.yaml
  )
  typeset -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER="(${(j:|:)anchor_files})"
  typeset -g POWERLEVEL9K_DIR_TRUNCATE_BEFORE_MARKER=false
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
  typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=80
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS=40
  typeset -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT=50
  typeset -g POWERLEVEL9K_DIR_HYPERLINK=false
  typeset -g POWERLEVEL9K_DIR_SHOW_WRITABLE=v2

  # VCS (Git)
  typeset -g POWERLEVEL9K_VCS_BRANCH_ICON=
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_ICON='?'
  function my_git_formatter() {
    emulate -L zsh
    if [[ -n $P9K_CONTENT ]]; then
      typeset -g my_git_format=$P9K_CONTENT
      return 0
    fi
    if (( $1 )); then
      P9K_CONTENT+='%76F‚á£'${1}'%f'
    fi
    if (( $2 )); then
      P9K_CONTENT+='%76F‚á°'${2}'%f'
    fi
    if (( $3 )); then
      P9K_CONTENT+='%196F‚óè'${3}'%f'
    fi
    if (( $4 )); then
      P9K_CONTENT+='%178F‚óè'${4}'%f'
    fi
    if (( $5 )); then
      P9K_CONTENT+='%178F‚óè'${5}'%f'
    fi
    if (( $6 )); then
      P9K_CONTENT+='%196F‚óè'${6}'%f'
    fi
    typeset -g my_git_format=$P9K_CONTENT
  }
  functions -M my_git_formatter 2>/dev/null
  typeset -g POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY=-1
  typeset -g POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN='~'
  typeset -g POWERLEVEL9K_VCS_DISABLE_GITSTATUS_FORMATTING=true
  typeset -g POWERLEVEL9K_VCS_CONTENT_EXPANSION='${$((my_git_formatter(${P9K_VCS_COMMITS_BEHIND:-0}, ${P9K_VCS_COMMITS_AHEAD:-0}, ${P9K_VCS_STAGED:-0}, ${P9K_VCS_UNSTAGED:-0}, ${P9K_VCS_UNTRACKED:-0}, ${P9K_VCS_CONFLICTED:-0})))+"${my_git_format}"}${P9K_VCS_CLEAN:+" %76F‚úì"}'
  typeset -g POWERLEVEL9K_VCS_{STAGED,UNSTAGED,UNTRACKED,CONFLICTED,COMMITS_AHEAD,COMMITS_BEHIND}_MAX_NUM=-1
  typeset -g POWERLEVEL9K_VCS_VISUAL_IDENTIFIER_COLOR=76
  typeset -g POWERLEVEL9K_VCS_LOADING_VISUAL_IDENTIFIER_COLOR=244
  typeset -g POWERLEVEL9K_VCS_BACKENDS=(git)
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=76
  typeset -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND=2
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=76
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=2
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=178
  typeset -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=3

  # Status
  typeset -g POWERLEVEL9K_STATUS_EXTENDED_STATES=true
  typeset -g POWERLEVEL9K_STATUS_OK=false
  typeset -g POWERLEVEL9K_STATUS_OK_FOREGROUND=70
  typeset -g POWERLEVEL9K_STATUS_OK_BACKGROUND=
  typeset -g POWERLEVEL9K_STATUS_OK_VISUAL_IDENTIFIER_EXPANSION='‚úì'
  typeset -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=160
  typeset -g POWERLEVEL9K_STATUS_ERROR_BACKGROUND=
  typeset -g POWERLEVEL9K_STATUS_ERROR_VISUAL_IDENTIFIER_EXPANSION='‚úó'

  # Time
  typeset -g POWERLEVEL9K_TIME_FOREGROUND=66
  typeset -g POWERLEVEL9K_TIME_BACKGROUND=
  typeset -g POWERLEVEL9K_TIME_FORMAT='%D{%H:%M:%S}'
  typeset -g POWERLEVEL9K_TIME_UPDATE_ON_COMMAND=false
}

(( ! p10k_config_opts[(I)no_aliases] )) && 'builtin' 'setopt' 'aliases'
(( ! p10k_config_opts[(I)no_sh_glob] )) && 'builtin' 'setopt' 'sh_glob'
(( ! p10k_config_opts[(I)no_brace_expand] )) && 'builtin' 'setopt' 'brace_expand'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
EOF
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ .zshrc
    echo "" >> "$HOME/.zshrc"
    echo "# To customize prompt, run \`p10k configure\` or edit ~/.p10k.zsh." >> "$HOME/.zshrc"
    echo "[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh" >> "$HOME/.zshrc"
    
    success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PowerLevel10k —Å–æ–∑–¥–∞–Ω–∞"
}

install_nerd_fonts() {
    print_section "–£–°–¢–ê–ù–û–í–ö–ê NERD FONTS" "üî§"
    
    local fonts_dir="$HOME/.local/share/fonts"
    mkdir -p "$fonts_dir"
    
    info "–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö Nerd Fonts..."
    
    local fonts=(
        "FiraCode"
        "Hack"
        "JetBrainsMono"
        "SourceCodePro"
        "UbuntuMono"
        "DejaVuSansMono"
    )
    
    for font in "${fonts[@]}"; do
        if [[ ! -d "$fonts_dir/$font" ]]; then
            info "–ó–∞–≥—Ä—É–∑–∫–∞ $font..."
            wget -q "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/$font.zip" -O "/tmp/$font.zip"
            unzip -q "/tmp/$font.zip" -d "$fonts_dir/$font"
            rm "/tmp/$font.zip"
            show_progress $((${#fonts[@]} - ${#fonts[@]})) ${#fonts[@]} "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $font"
        fi
    done
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —à—Ä–∏—Ñ—Ç–æ–≤
    fc-cache -fv
    
    success "Nerd Fonts —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    info "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤:"
    for font in "${fonts[@]}"; do
        echo "  ‚Ä¢ $font Nerd Font"
    done
    
    terminal_beautification_menu
}

setup_color_schemes() {
    print_section "–¶–í–ï–¢–û–í–´–ï –°–•–ï–ú–´ –¢–ï–†–ú–ò–ù–ê–õ–ê" "üé®"
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É:${NC}"
    echo ""
    echo -e "${CYAN} 1)${NC} Dracula"
    echo -e "${CYAN} 2)${NC} Gruvbox"
    echo -e "${CYAN} 3)${NC} Nord"
    echo -e "${CYAN} 4)${NC} One Dark"
    echo -e "${CYAN} 5)${NC} Solarized Dark"
    echo -e "${CYAN} 6)${NC} Material Theme"
    echo -e "${CYAN} 7)${NC} –í—Å–µ —Å—Ö–µ–º—ã (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ)"
    echo ""
    echo -e "${GRAY} 0)${NC} –ù–∞–∑–∞–¥"
    
    local choice
    choice=$(prompt "–í–∞—à –≤—ã–±–æ—Ä")
    
    case "$choice" in
        1) install_color_scheme "dracula" ;;
        2) install_color_scheme "gruvbox" ;;
        3) install_color_scheme "nord" ;;
        4) install_color_scheme "onedark" ;;
        5) install_color_scheme "solarized" ;;
        6) install_color_scheme "material" ;;
        7) install_all_color_schemes ;;
        0) terminal_beautification_menu ;;
        *) 
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            sleep 2
            setup_color_schemes
            ;;
    esac
}

install_color_scheme() {
    local scheme="$1"
    
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã: $scheme"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å—Ö–µ–º
    mkdir -p "$THEMES_DIR/terminal"
    
    case "$scheme" in
        "dracula")
            # Dracula theme
            wget -q "https://raw.githubusercontent.com/dracula/gnome-terminal/master/dracula.sh" -O "/tmp/dracula.sh"
            chmod +x "/tmp/dracula.sh"
            /tmp/dracula.sh
            ;;
        "gruvbox")
            # Gruvbox theme
            git clone https://github.com/Mayccoll/Gogh.git "$THEMES_DIR/terminal/gogh"
            export TERMINAL=gnome-terminal
            bash "$THEMES_DIR/terminal/gogh/themes/gruvbox-dark.sh"
            ;;
        "nord")
            # Nord theme
            git clone https://github.com/arcticicestudio/nord-gnome-terminal.git "$THEMES_DIR/terminal/nord"
            bash "$THEMES_DIR/terminal/nord/src/nord.sh"
            ;;
        "onedark")
            # One Dark theme
            git clone https://github.com/denysdovhan/one-gnome-terminal "$THEMES_DIR/terminal/onedark"
            bash "$THEMES_DIR/terminal/onedark/one-dark.sh"
            ;;
        "solarized")
            # Solarized theme
            git clone https://github.com/Anthony25/gnome-terminal-colors-solarized.git "$THEMES_DIR/terminal/solarized"
            bash "$THEMES_DIR/terminal/solarized/install.sh"
            ;;
        "material")
            # Material theme
            git clone https://github.com/Mayccoll/Gogh.git "$THEMES_DIR/terminal/gogh"
            export TERMINAL=gnome-terminal
            bash "$THEMES_DIR/terminal/gogh/themes/material.sh"
            ;;
    esac
    
    success "–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ $scheme —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    
    setup_color_schemes
}

setup_beautiful_tmux() {
    print_section "–ö–†–ê–°–ò–í–´–ô TMUX" "üñ•Ô∏è"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ tmux
    sudo apt install -y tmux
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tmux Plugin Manager
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ tmux
    create_tmux_config
    
    success "–ö—Ä–∞—Å–∏–≤—ã–π tmux –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    info "–ù–∞–∂–º–∏—Ç–µ prefix + I –≤ tmux –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤"
    
    terminal_beautification_menu
}

create_tmux_config() {
    cat > "$HOME/.tmux.conf" << 'EOF'
# =============================================================================
# Beautiful Tmux Configuration
# =============================================================================

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g history-limit 50000
set -g display-time 4000
set -g status-interval 5
set -g focus-events on
set -sg escape-time 10

# –ú—ã—à—å
set -g mouse on

# Prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–∫–æ–Ω
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –ø–∞–Ω–µ–ª—è–º–∏ (vim-style)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–∞–Ω–µ–ª–µ–π
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (vim-style)
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# =============================================================================
# –î–ò–ó–ê–ô–ù –ò –°–¢–ê–¢–£–°–ù–ê–Ø –°–¢–†–û–ö–ê
# =============================================================================

# –¶–≤–µ—Ç–∞ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
set -g status-bg "#1e1e2e"
set -g status-fg "#cdd6f4"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–æ–Ω
setw -g window-status-current-style "fg=#1e1e2e,bg=#89b4fa,bold"
setw -g window-status-current-format " #I:#W#F "
setw -g window-status-style "fg=#cdd6f4,bg=#313244"
setw -g window-status-format " #I:#W#F "

# –ü–∞–Ω–µ–ª–∏
set -g pane-border-style "fg=#313244"
set -g pane-active-border-style "fg=#89b4fa"

# –°–æ–æ–±—â–µ–Ω–∏—è
set -g message-style "fg=#1e1e2e,bg=#f9e2af"
set -g message-command-style "fg=#1e1e2e,bg=#f9e2af"

# –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
set -g status-position bottom
set -g status-justify left
set -g status-left-length 50
set -g status-right-length 150

# –õ–µ–≤–∞—è —á–∞—Å—Ç—å —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
set -g status-left "#[fg=#1e1e2e,bg=#89b4fa,bold] ‚ùê #S #[fg=#89b4fa,bg=#313244]#[fg=#cdd6f4,bg=#313244] #I:#P #[fg=#313244,bg=#1e1e2e]"

# –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
set -g status-right "#[fg=#313244,bg=#1e1e2e]#[fg=#cdd6f4,bg=#313244] %Y-%m-%d #[fg=#89b4fa,bg=#313244]#[fg=#1e1e2e,bg=#89b4fa,bold] %H:%M:%S "

# =============================================================================
# –ü–õ–ê–ì–ò–ù–´
# =============================================================================

# –°–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'christoomey/vim-tmux-navigator'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TPM (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞)
run '~/.tmux/plugins/tpm/tpm'
EOF

    success ".tmux.conf —Å–æ–∑–¥–∞–Ω —Å –∫—Ä–∞—Å–∏–≤—ã–º –¥–∏–∑–∞–π–Ω–æ–º"
}

full_terminal_customization() {
    print_section "–ü–û–õ–ù–ê–Ø –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–Ø –¢–ï–†–ú–ò–ù–ê–õ–ê" "$EMOJI_CROWN"
    
    info "–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—é —Ç–µ—Ä–º–∏–Ω–∞–ª–∞..."
    
    local total_steps=8
    local current_step=0
    
    # –®–∞–≥ 1: Oh My Zsh
    ((current_step++))
    show_progress $current_step $total_steps "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh"
    install_oh_my_zsh_silent
    
    # –®–∞–≥ 2: PowerLevel10k
    ((current_step++))
    show_progress $current_step $total_steps "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PowerLevel10k"
    install_powerlevel10k_silent
    
    # –®–∞–≥ 3: Nerd Fonts
    ((current_step++))
    show_progress $current_step $total_steps "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nerd Fonts"
    install_nerd_fonts_silent
    
    # –®–∞–≥ 4: Tmux
    ((current_step++))
    show_progress $current_step $total_steps "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Tmux"
    setup_beautiful_tmux_silent
    
    # –®–∞–≥ 5: –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
    ((current_step++))
    show_progress $current_step $total_steps "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å—Ö–µ–º"
    install_all_color_schemes_silent
    
    # –®–∞–≥ 6: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
    ((current_step++))
    show_progress $current_step $total_steps "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ç–∏–ª–∏—Ç"
    install_terminal_utilities
    
    # –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ vim
    ((current_step++))
    show_progress $current_step $total_steps "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vim"
    setup_vim_configuration
    
    # –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    ((current_step++))
    show_progress $current_step $total_steps "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
    finalize_terminal_setup
    
    echo ""
    success "–ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    
    echo ""
    echo -e "${CYAN}${BOLD}üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à —Ç–µ—Ä–º–∏–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ—Ç—Ä—è—Å–∞—é—â–µ!${NC}"
    echo ""
    echo -e "${WHITE}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:${NC}"
    echo -e "  ‚úÖ Oh My Zsh —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏"
    echo -e "  ‚úÖ PowerLevel10k —Ç–µ–º–∞"
    echo -e "  ‚úÖ Nerd Fonts"
    echo -e "  ‚úÖ –ö—Ä–∞—Å–∏–≤—ã–π tmux"
    echo -e "  ‚úÖ –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã"
    echo -e "  ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã"
    echo -e "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Vim"
    echo ""
    echo -e "${YELLOW}–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
    echo -e "  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª"
    echo -e "  2. –í—ã–±–µ—Ä–∏—Ç–µ Nerd Font –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
    echo -e "  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'p10k configure' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã"
    echo ""
    
    if yes_no "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª —Å–µ–π—á–∞—Å?" "y"; then
        exec zsh
    fi
    
    terminal_beautification_menu
}

# =============================================================================
# 2. –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
# =============================================================================

system_optimization_menu() {
    print_section "–°–ò–°–¢–ï–ú–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ò –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø" "$EMOJI_GEAR"
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:${NC}"
    echo ""
    echo -e "${CYAN} 1)${NC} –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo -e "${CYAN} 2)${NC} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–∞–º–∏"
    echo -e "${CYAN} 3)${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swap –∏ –ø–∞–º—è—Ç–∏"
    echo -e "${CYAN} 4)${NC} –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SSD"
    echo -e "${CYAN} 5)${NC} –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo -e "${CYAN} 6)${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è–¥—Ä–∞"
    echo -e "${CYAN} 7)${NC} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º"
    echo -e "${CYAN} 8)${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
    echo -e "${CYAN} 9)${NC} –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
    echo ""
    echo -e "${GRAY} 0)${NC} –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    
    local choice
    choice=$(prompt "–í–∞—à –≤—ã–±–æ—Ä")
    
    case "$choice" in
        1) performance_optimization ;;
        2) service_management ;;
        3) memory_swap_optimization ;;
        4) ssd_optimization ;;
        5) system_cleanup ;;
        6) kernel_optimization ;;
        7) startup_management ;;
        8) filesystem_optimization ;;
        9) full_system_optimization ;;
        0) show_main_menu ;;
        *) 
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            sleep 2
            system_optimization_menu
            ;;
    esac
}

performance_optimization() {
    print_section "–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò" "üöÄ"
    
    info "–ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    sudo apt install -y htop iotop iftop nethogs sysstat
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swappiness
    setup_swappiness
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ I/O
    setup_io_scheduler
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    optimize_network_settings
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    optimize_filesystem_settings
    
    success "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    system_optimization_menu
}

setup_swappiness() {
    info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ swappiness..."
    
    local current_swappiness=$(cat /proc/sys/vm/swappiness)
    echo "–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ swappiness: $current_swappiness"
    
    local new_swappiness
    new_swappiness=$(prompt "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ swappiness (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 10 –¥–ª—è SSD, 60 –¥–ª—è HDD)")
    
    if [[ "$new_swappiness" =~ ^[0-9]+$ ]] && [[ $new_swappiness -ge 0 ]] && [[ $new_swappiness -le 100 ]]; then
        echo "vm.swappiness=$new_swappiness" | sudo tee -a /etc/sysctl.conf
        sudo sysctl vm.swappiness=$new_swappiness
        success "Swappiness —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $new_swappiness"
    else
        error "–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ swappiness"
    fi
}

# –ü—Ä–æ–¥–æ–ª–∂—É —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...

# =============================================================================
# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
# =============================================================================

main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [[ $EUID -eq 0 ]]; then
        error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç root!"
        error "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./ubuntu_master.sh"
        exit 1
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_environment
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    print_header
    
    echo -e "${WHITE}–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ubuntu Master Configuration!${NC}"
    echo ""
    echo -e "${CYAN}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:${NC}"
    echo -e "  ${EMOJI_MAGIC} –°–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª"
    echo -e "  ${EMOJI_GEAR} –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã"
    echo -e "  ${EMOJI_FIRE} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Ä–µ–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo -e "  ${EMOJI_DIAMOND} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞ –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
    echo -e "  ${EMOJI_LIGHTNING} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å–µ—Ç—å"
    echo -e "  ${EMOJI_STAR} –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!"
    echo ""
    
    if yes_no "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É?" "y"; then
        show_main_menu
    else
        info "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi